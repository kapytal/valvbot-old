{
  "meta": {
    "$_POST": [
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {}
          }
        },
        "name": "description"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "",
        "module": "auth",
        "action": "restrict",
        "options": {
          "provider": "auth",
          "permissions": [
            "developer"
          ]
        }
      },
      {
        "name": "identity",
        "module": "auth",
        "action": "identify",
        "options": {
          "provider": "auth"
        },
        "meta": []
      },
      {
        "name": "queryActiveTimers",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "connection": "mexaversoDb",
          "sql": {
            "type": "SELECT",
            "columns": [],
            "params": [],
            "table": {
              "name": "timesheets"
            },
            "primary": "time-entry",
            "joins": [],
            "query": "SELECT *\nFROM timesheets\nWHERE stop IS NULL",
            "sort": "",
            "dir": "",
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "timesheets.stop",
                  "field": "timesheets.stop",
                  "type": "datetime",
                  "operator": "is_null",
                  "value": null,
                  "data": {
                    "table": "timesheets",
                    "column": "stop",
                    "type": "datetime",
                    "columnObj": {
                      "type": "datetime",
                      "primary": false,
                      "unique": false,
                      "nullable": true,
                      "name": "stop"
                    }
                  },
                  "operation": "IS NULL"
                }
              ],
              "conditional": null,
              "valid": true
            }
          }
        },
        "meta": [
          {
            "type": "number",
            "name": "time-entry"
          },
          {
            "type": "number",
            "name": "userId"
          },
          {
            "type": "datetime",
            "name": "start"
          },
          {
            "type": "datetime",
            "name": "stop"
          },
          {
            "type": "time",
            "name": "duration"
          },
          {
            "type": "text",
            "name": "description"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{queryActiveTimers.count()>0}}",
          "then": {
            "steps": {
              "name": "response",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": {
                  "success": false,
                  "message": "Can't find a new timer until previous one is finalized"
                }
              },
              "meta": [],
              "output": true,
              "outputType": "text"
            }
          },
          "else": {
            "steps": [
              {
                "name": "insert",
                "module": "dbupdater",
                "action": "insert",
                "options": {
                  "connection": "mexaversoDb",
                  "sql": {
                    "type": "insert",
                    "values": [
                      {
                        "table": "timesheets",
                        "column": "start",
                        "type": "datetime",
                        "value": "{{NOW}}"
                      },
                      {
                        "table": "timesheets",
                        "column": "userId",
                        "type": "number",
                        "value": "{{identity}}"
                      },
                      {
                        "table": "timesheets",
                        "column": "description",
                        "type": "text",
                        "value": "{{$_POST.description}}"
                      }
                    ],
                    "table": "timesheets",
                    "returning": "time-entry",
                    "query": "INSERT INTO timesheets\n(start, userId, description) VALUES (:P1 /* {{NOW}} */, :P2 /* {{identity}} */, :P3 /* {{$_POST.description}} */)",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{NOW}}",
                        "test": ""
                      },
                      {
                        "name": ":P2",
                        "type": "expression",
                        "value": "{{identity}}",
                        "test": ""
                      },
                      {
                        "name": ":P3",
                        "type": "expression",
                        "value": "{{$_POST.description}}",
                        "test": ""
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "identity",
                    "type": "text"
                  },
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ]
              },
              {
                "name": "response",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": {
                    "success": true,
                    "time-entry": "{{insert.identity}}"
                  }
                },
                "meta": [],
                "outputType": "text",
                "output": true
              }
            ]
          }
        },
        "outputType": "boolean"
      }
    ]
  }
}